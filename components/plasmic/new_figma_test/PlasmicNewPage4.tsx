// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: x8ztdr6NwjtFcF6gdhDwfr
// Component: qQIqchRrdz
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: b0t-W0BM_nt_/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_new_figma_test.module.css"; // plasmic-import: x8ztdr6NwjtFcF6gdhDwfr/projectcss
import * as sty from "./PlasmicNewPage4.module.css"; // plasmic-import: qQIqchRrdz/css

import PlayIcon from "./icons/PlasmicIcon__Play"; // plasmic-import: N-AzQaCnZa/icon

export type PlasmicNewPage4__VariantMembers = {};

export type PlasmicNewPage4__VariantsArgs = {};
type VariantPropType = keyof PlasmicNewPage4__VariantsArgs;
export const PlasmicNewPage4__VariantProps = new Array<VariantPropType>();

export type PlasmicNewPage4__ArgsType = {};
type ArgPropType = keyof PlasmicNewPage4__ArgsType;
export const PlasmicNewPage4__ArgProps = new Array<ArgPropType>();

export type PlasmicNewPage4__OverridesType = {
  root?: p.Flex<"div">;
  _01Default?: p.Flex<"div">;
  content?: p.Flex<"div">;
  contentLeft?: p.Flex<"div">;
  contentBlock?: p.Flex<"div">;
  heading?: p.Flex<"div">;
  eyebrow?: p.Flex<"div">;
  headline?: p.Flex<"div">;
  subhead?: p.Flex<"div">;
  ctaBlockDesktop?: p.Flex<"div">;
  ctaGroup?: p.Flex<"div">;
  _01PrimaryGreen?: p.Flex<"div">;
  smallPrimaryDefault?: p.Flex<"div">;
  minWidth100WidthShimTop?: p.Flex<"div">;
  textLabel?: p.Flex<"div">;
  minWidth100ShimBottom?: p.Flex<"div">;
  _05SecondaryAltBlue?: p.Flex<"div">;
  smallSecondaryDefault?: p.Flex<"div">;
  minWidth100WidthShimTop2?: p.Flex<"div">;
  textLabel2?: p.Flex<"div">;
  minWidth100ShimBottom2?: p.Flex<"div">;
  textCta?: p.Flex<"div">;
  videoLink?: p.Flex<"div">;
  _01Blue?: p.Flex<"div">;
  _02Body0201Blue01Default?: p.Flex<"div">;
  playIcon?: p.Flex<"div">;
  play?: p.Flex<"div">;
  play2?: p.Flex<"div">;
  videoLink2?: p.Flex<"div">;
  body02?: p.Flex<"div">;
  duration?: p.Flex<"div">;
  body022?: p.Flex<"div">;
  quickbooksDashboardProductQboUsDesktop1?: p.Flex<"div">;
  _01Default2?: p.Flex<"div">;
  content2?: p.Flex<"div">;
  contentLeft2?: p.Flex<"div">;
  contentBlock2?: p.Flex<"div">;
  heading2?: p.Flex<"div">;
  eyebrow2?: p.Flex<"div">;
  headline2?: p.Flex<"div">;
  subhead2?: p.Flex<"div">;
  ctaBlockDesktop2?: p.Flex<"div">;
  ctaGroup2?: p.Flex<"div">;
  _01PrimaryGreen2?: p.Flex<"div">;
  smallPrimaryDefault2?: p.Flex<"div">;
  _05SecondaryAltBlue2?: p.Flex<"div">;
  smallSecondaryDefault2?: p.Flex<"div">;
  textCta2?: p.Flex<"div">;
  _01Blue2?: p.Flex<"div">;
  _02Body0201Blue01Default2?: p.Flex<"div">;
  playIcon2?: p.Flex<"div">;
  duration2?: p.Flex<"div">;
  quickbooksDashboardProductQboUsDesktop2?: p.Flex<"div">;
  mobile?: p.Flex<"div">;
  _01Default3?: p.Flex<"div">;
  content3?: p.Flex<"div">;
  contentLeft3?: p.Flex<"div">;
  contentBlock3?: p.Flex<"div">;
  heading3?: p.Flex<"div">;
  eyebrow3?: p.Flex<"div">;
  headline3?: p.Flex<"div">;
  subhead3?: p.Flex<"div">;
  ctaBlockMobile?: p.Flex<"div">;
  ctaGroup3?: p.Flex<"div">;
  _01PrimaryGreen3?: p.Flex<"div">;
  smallPrimaryDefault3?: p.Flex<"div">;
  _05SecondaryAltBlue3?: p.Flex<"div">;
  smallSecondaryDefault3?: p.Flex<"div">;
  _01Blue3?: p.Flex<"div">;
  _02Body0201Blue01Default3?: p.Flex<"div">;
  playIcon3?: p.Flex<"div">;
  duration3?: p.Flex<"div">;
  quickbooksDashboardProductQboUsDesktop3?: p.Flex<"div">;
};

export interface DefaultNewPage4Props {
  dataFetches: PlasmicNewPage4__Fetches;
}

function PlasmicNewPage4__RenderFunc(props: {
  variants: PlasmicNewPage4__VariantsArgs;
  args: PlasmicNewPage4__ArgsType;
  overrides: PlasmicNewPage4__OverridesType;
  dataFetches?: PlasmicNewPage4__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          {(hasVariant(globalVariants, "screen", "tablet") ? false : true) ? (
            <div
              data-plasmic-name={"_01Default"}
              data-plasmic-override={overrides._01Default}
              className={classNames(defaultcss.all, sty._01Default)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"content"}
                data-plasmic-override={overrides.content}
                hasGap={true}
                className={classNames(defaultcss.all, sty.content)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"contentLeft"}
                  data-plasmic-override={overrides.contentLeft}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.contentLeft)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"contentBlock"}
                    data-plasmic-override={overrides.contentBlock}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.contentBlock)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"heading"}
                      data-plasmic-override={overrides.heading}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.heading)}
                    >
                      <div
                        data-plasmic-name={"eyebrow"}
                        data-plasmic-override={overrides.eyebrow}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.eyebrow
                        )}
                      >
                        {"EYEBROW PLACEHOLDER"}
                      </div>

                      <div
                        data-plasmic-name={"headline"}
                        data-plasmic-override={overrides.headline}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.headline
                        )}
                      >
                        {"Simplify your accounting"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"subhead"}
                      data-plasmic-override={overrides.subhead}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.subhead
                      )}
                    >
                      {
                        "Easily track income, expenses, and more with accounting software designed for all kinds of businesses. "
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"ctaBlockDesktop"}
                    data-plasmic-override={overrides.ctaBlockDesktop}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.ctaBlockDesktop)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"ctaGroup"}
                      data-plasmic-override={overrides.ctaGroup}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.ctaGroup)}
                    >
                      <div
                        data-plasmic-name={"_01PrimaryGreen"}
                        data-plasmic-override={overrides._01PrimaryGreen}
                        className={classNames(
                          defaultcss.all,
                          sty._01PrimaryGreen
                        )}
                      >
                        <div
                          data-plasmic-name={"smallPrimaryDefault"}
                          data-plasmic-override={overrides.smallPrimaryDefault}
                          className={classNames(
                            defaultcss.all,
                            sty.smallPrimaryDefault
                          )}
                        >
                          <div
                            data-plasmic-name={"minWidth100WidthShimTop"}
                            data-plasmic-override={
                              overrides.minWidth100WidthShimTop
                            }
                            className={classNames(
                              defaultcss.all,
                              sty.minWidth100WidthShimTop
                            )}
                          />

                          <div
                            data-plasmic-name={"textLabel"}
                            data-plasmic-override={overrides.textLabel}
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.textLabel
                            )}
                          >
                            {"Lorem ipsum"}
                          </div>

                          <div
                            data-plasmic-name={"minWidth100ShimBottom"}
                            data-plasmic-override={
                              overrides.minWidth100ShimBottom
                            }
                            className={classNames(
                              defaultcss.all,
                              sty.minWidth100ShimBottom
                            )}
                          />
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"_05SecondaryAltBlue"}
                        data-plasmic-override={overrides._05SecondaryAltBlue}
                        className={classNames(
                          defaultcss.all,
                          sty._05SecondaryAltBlue
                        )}
                      >
                        <div
                          data-plasmic-name={"smallSecondaryDefault"}
                          data-plasmic-override={
                            overrides.smallSecondaryDefault
                          }
                          className={classNames(
                            defaultcss.all,
                            sty.smallSecondaryDefault
                          )}
                        >
                          <div
                            data-plasmic-name={"minWidth100WidthShimTop2"}
                            data-plasmic-override={
                              overrides.minWidth100WidthShimTop2
                            }
                            className={classNames(
                              defaultcss.all,
                              sty.minWidth100WidthShimTop2
                            )}
                          />

                          <div
                            data-plasmic-name={"textLabel2"}
                            data-plasmic-override={overrides.textLabel2}
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.textLabel2
                            )}
                          >
                            {"Lorem ipsum"}
                          </div>

                          <div
                            data-plasmic-name={"minWidth100ShimBottom2"}
                            data-plasmic-override={
                              overrides.minWidth100ShimBottom2
                            }
                            className={classNames(
                              defaultcss.all,
                              sty.minWidth100ShimBottom2
                            )}
                          />
                        </div>
                      </div>

                      {false ? (
                        <div
                          data-plasmic-name={"textCta"}
                          data-plasmic-override={overrides.textCta}
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.textCta
                          )}
                        >
                          {"Or call xxx-xx-xxxx"}
                        </div>
                      ) : null}
                    </p.Stack>

                    <div
                      data-plasmic-name={"videoLink"}
                      data-plasmic-override={overrides.videoLink}
                      className={classNames(defaultcss.all, sty.videoLink)}
                    >
                      <div
                        data-plasmic-name={"_01Blue"}
                        data-plasmic-override={overrides._01Blue}
                        className={classNames(defaultcss.all, sty._01Blue)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"_02Body0201Blue01Default"}
                          data-plasmic-override={
                            overrides._02Body0201Blue01Default
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty._02Body0201Blue01Default
                          )}
                        >
                          <div
                            data-plasmic-name={"playIcon"}
                            data-plasmic-override={overrides.playIcon}
                            className={classNames(defaultcss.all, sty.playIcon)}
                          >
                            <div
                              data-plasmic-name={"play"}
                              data-plasmic-override={overrides.play}
                              className={classNames(defaultcss.all, sty.play)}
                            >
                              <div
                                data-plasmic-name={"play2"}
                                data-plasmic-override={overrides.play2}
                                className={classNames(
                                  defaultcss.all,
                                  sty.play2
                                )}
                              >
                                <PlayIcon
                                  className={classNames(
                                    defaultcss.all,
                                    sty.svg__oP5Nf
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          </div>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"videoLink2"}
                            data-plasmic-override={overrides.videoLink2}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.videoLink2
                            )}
                          >
                            <div
                              data-plasmic-name={"body02"}
                              data-plasmic-override={overrides.body02}
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.body02
                              )}
                            >
                              {"Lorem ipsum dolar"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"duration"}
                            data-plasmic-override={overrides.duration}
                            hasGap={true}
                            className={classNames(defaultcss.all, sty.duration)}
                          >
                            <div
                              data-plasmic-name={"body022"}
                              data-plasmic-override={overrides.body022}
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.body022
                              )}
                            >
                              {"(59s)"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>
                    </div>
                  </p.Stack>
                </p.Stack>

                <div
                  data-plasmic-name={"quickbooksDashboardProductQboUsDesktop1"}
                  data-plasmic-override={
                    overrides.quickbooksDashboardProductQboUsDesktop1
                  }
                  className={classNames(
                    defaultcss.all,
                    sty.quickbooksDashboardProductQboUsDesktop1
                  )}
                />
              </p.Stack>
            </div>
          ) : null}
          {(
            hasVariant(globalVariants, "screen", "mobile")
              ? false
              : hasVariant(globalVariants, "screen", "tablet")
              ? true
              : false
          ) ? (
            <div
              data-plasmic-name={"_01Default2"}
              data-plasmic-override={overrides._01Default2}
              className={classNames(defaultcss.all, sty._01Default2)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"content2"}
                data-plasmic-override={overrides.content2}
                hasGap={true}
                className={classNames(defaultcss.all, sty.content2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"contentLeft2"}
                  data-plasmic-override={overrides.contentLeft2}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.contentLeft2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"contentBlock2"}
                    data-plasmic-override={overrides.contentBlock2}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.contentBlock2)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"heading2"}
                      data-plasmic-override={overrides.heading2}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.heading2)}
                    >
                      <div
                        data-plasmic-name={"eyebrow2"}
                        data-plasmic-override={overrides.eyebrow2}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.eyebrow2
                        )}
                      >
                        {"EYEBROW PLACEHOLDER"}
                      </div>

                      <div
                        data-plasmic-name={"headline2"}
                        data-plasmic-override={overrides.headline2}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.headline2
                        )}
                      >
                        {"Simplify your accounting"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"subhead2"}
                      data-plasmic-override={overrides.subhead2}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.subhead2
                      )}
                    >
                      {
                        "Easily track income, expenses, and more with accounting software designed for all kinds of businesses. "
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"ctaBlockDesktop2"}
                    data-plasmic-override={overrides.ctaBlockDesktop2}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.ctaBlockDesktop2)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"ctaGroup2"}
                      data-plasmic-override={overrides.ctaGroup2}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.ctaGroup2)}
                    >
                      <div
                        data-plasmic-name={"_01PrimaryGreen2"}
                        data-plasmic-override={overrides._01PrimaryGreen2}
                        className={classNames(
                          defaultcss.all,
                          sty._01PrimaryGreen2
                        )}
                      >
                        <div
                          data-plasmic-name={"smallPrimaryDefault2"}
                          data-plasmic-override={overrides.smallPrimaryDefault2}
                          className={classNames(
                            defaultcss.all,
                            sty.smallPrimaryDefault2
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.freeBox__kf7Eb
                            )}
                          />

                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.text__iEeNg
                            )}
                          >
                            {"Lorem ipsum"}
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.freeBox__bIg3P
                            )}
                          />
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"_05SecondaryAltBlue2"}
                        data-plasmic-override={overrides._05SecondaryAltBlue2}
                        className={classNames(
                          defaultcss.all,
                          sty._05SecondaryAltBlue2
                        )}
                      >
                        <div
                          data-plasmic-name={"smallSecondaryDefault2"}
                          data-plasmic-override={
                            overrides.smallSecondaryDefault2
                          }
                          className={classNames(
                            defaultcss.all,
                            sty.smallSecondaryDefault2
                          )}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.freeBox___3IRf0
                            )}
                          />

                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.text__fZbho
                            )}
                          >
                            {"Lorem ipsum"}
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.freeBox__qp55P
                            )}
                          />
                        </div>
                      </div>

                      {false ? (
                        <div
                          data-plasmic-name={"textCta2"}
                          data-plasmic-override={overrides.textCta2}
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.textCta2
                          )}
                        >
                          {"Or call xxx-xx-xxxx"}
                        </div>
                      ) : null}
                    </p.Stack>

                    <div
                      className={classNames(defaultcss.all, sty.freeBox__hlftl)}
                    >
                      <div
                        data-plasmic-name={"_01Blue2"}
                        data-plasmic-override={overrides._01Blue2}
                        className={classNames(defaultcss.all, sty._01Blue2)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"_02Body0201Blue01Default2"}
                          data-plasmic-override={
                            overrides._02Body0201Blue01Default2
                          }
                          hasGap={true}
                          className={classNames(
                            defaultcss.all,
                            sty._02Body0201Blue01Default2
                          )}
                        >
                          <div
                            data-plasmic-name={"playIcon2"}
                            data-plasmic-override={overrides.playIcon2}
                            className={classNames(
                              defaultcss.all,
                              sty.playIcon2
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                sty.freeBox___1Cf9H
                              )}
                            >
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  sty.freeBox__yZ3J
                                )}
                              >
                                {(
                                  hasVariant(globalVariants, "screen", "tablet")
                                    ? true
                                    : false
                                ) ? (
                                  <PlayIcon
                                    className={classNames(
                                      defaultcss.all,
                                      sty.svg__noqKy
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                              </div>
                            </div>
                          </div>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.freeBox__cgZuh
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.text__awDqs
                              )}
                            >
                              {"Lorem ipsum dolar"}
                            </div>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"duration2"}
                            data-plasmic-override={overrides.duration2}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.duration2
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.text___4JWpF
                              )}
                            >
                              {"(59s)"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>
                    </div>
                  </p.Stack>
                </p.Stack>

                <div
                  data-plasmic-name={"quickbooksDashboardProductQboUsDesktop2"}
                  data-plasmic-override={
                    overrides.quickbooksDashboardProductQboUsDesktop2
                  }
                  className={classNames(
                    defaultcss.all,
                    sty.quickbooksDashboardProductQboUsDesktop2
                  )}
                />
              </p.Stack>
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div
              data-plasmic-name={"mobile"}
              data-plasmic-override={overrides.mobile}
              className={classNames(defaultcss.all, sty.mobile)}
            >
              <div
                data-plasmic-name={"_01Default3"}
                data-plasmic-override={overrides._01Default3}
                className={classNames(defaultcss.all, sty._01Default3)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content3"}
                  data-plasmic-override={overrides.content3}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.content3)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"contentLeft3"}
                    data-plasmic-override={overrides.contentLeft3}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.contentLeft3)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"contentBlock3"}
                      data-plasmic-override={overrides.contentBlock3}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.contentBlock3)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"heading3"}
                        data-plasmic-override={overrides.heading3}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.heading3)}
                      >
                        <div
                          data-plasmic-name={"eyebrow3"}
                          data-plasmic-override={overrides.eyebrow3}
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.eyebrow3
                          )}
                        >
                          {"EYEBROW PLACEHOLDER"}
                        </div>

                        <div
                          data-plasmic-name={"headline3"}
                          data-plasmic-override={overrides.headline3}
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.headline3
                          )}
                        >
                          {"Simplify your accounting"}
                        </div>
                      </p.Stack>

                      <div
                        data-plasmic-name={"subhead3"}
                        data-plasmic-override={overrides.subhead3}
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.subhead3
                        )}
                      >
                        {
                          "Easily track income, expenses, and more with accounting software designed for all kinds of businesses. "
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"ctaBlockMobile"}
                      data-plasmic-override={overrides.ctaBlockMobile}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.ctaBlockMobile)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"ctaGroup3"}
                        data-plasmic-override={overrides.ctaGroup3}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.ctaGroup3)}
                      >
                        <div
                          data-plasmic-name={"_01PrimaryGreen3"}
                          data-plasmic-override={overrides._01PrimaryGreen3}
                          className={classNames(
                            defaultcss.all,
                            sty._01PrimaryGreen3
                          )}
                        >
                          <div
                            data-plasmic-name={"smallPrimaryDefault3"}
                            data-plasmic-override={
                              overrides.smallPrimaryDefault3
                            }
                            className={classNames(
                              defaultcss.all,
                              sty.smallPrimaryDefault3
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                sty.freeBox__lHrho
                              )}
                            />

                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.text__hbuiv
                              )}
                            >
                              {"Lorem ipsum"}
                            </div>

                            <div
                              className={classNames(
                                defaultcss.all,
                                sty.freeBox__y75Tp
                              )}
                            />
                          </div>
                        </div>

                        <div
                          data-plasmic-name={"_05SecondaryAltBlue3"}
                          data-plasmic-override={overrides._05SecondaryAltBlue3}
                          className={classNames(
                            defaultcss.all,
                            sty._05SecondaryAltBlue3
                          )}
                        >
                          <div
                            data-plasmic-name={"smallSecondaryDefault3"}
                            data-plasmic-override={
                              overrides.smallSecondaryDefault3
                            }
                            className={classNames(
                              defaultcss.all,
                              sty.smallSecondaryDefault3
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                sty.freeBox__j8Bzk
                              )}
                            />

                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.text__iNlXg
                              )}
                            >
                              {"Lorem ipsum"}
                            </div>

                            <div
                              className={classNames(
                                defaultcss.all,
                                sty.freeBox__f3ShC
                              )}
                            />
                          </div>
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.freeBox__cEH)}
                      >
                        <div
                          data-plasmic-name={"_01Blue3"}
                          data-plasmic-override={overrides._01Blue3}
                          className={classNames(defaultcss.all, sty._01Blue3)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"_02Body0201Blue01Default3"}
                            data-plasmic-override={
                              overrides._02Body0201Blue01Default3
                            }
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty._02Body0201Blue01Default3
                            )}
                          >
                            <div
                              data-plasmic-name={"playIcon3"}
                              data-plasmic-override={overrides.playIcon3}
                              className={classNames(
                                defaultcss.all,
                                sty.playIcon3
                              )}
                            >
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  sty.freeBox__fFVf
                                )}
                              >
                                <div
                                  className={classNames(
                                    defaultcss.all,
                                    sty.freeBox__bzEen
                                  )}
                                >
                                  {(
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mobile"
                                    )
                                      ? true
                                      : false
                                  ) ? (
                                    <PlayIcon
                                      className={classNames(
                                        defaultcss.all,
                                        sty.svg__o4Ouk
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                </div>
                              </div>
                            </div>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                defaultcss.all,
                                sty.freeBox__acijh
                              )}
                            >
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.text__c9Zo3
                                )}
                              >
                                {"Lorem ipsum dolar"}
                              </div>
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"duration3"}
                              data-plasmic-override={overrides.duration3}
                              hasGap={true}
                              className={classNames(
                                defaultcss.all,
                                sty.duration3
                              )}
                            >
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.text__xLwGk
                                )}
                              >
                                {"(59s)"}
                              </div>
                            </p.Stack>
                          </p.Stack>
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <div
                    data-plasmic-name={
                      "quickbooksDashboardProductQboUsDesktop3"
                    }
                    data-plasmic-override={
                      overrides.quickbooksDashboardProductQboUsDesktop3
                    }
                    className={classNames(
                      defaultcss.all,
                      sty.quickbooksDashboardProductQboUsDesktop3
                    )}
                  />
                </p.Stack>
              </div>
            </div>
          ) : null}
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "_01Default",
    "content",
    "contentLeft",
    "contentBlock",
    "heading",
    "eyebrow",
    "headline",
    "subhead",
    "ctaBlockDesktop",
    "ctaGroup",
    "_01PrimaryGreen",
    "smallPrimaryDefault",
    "minWidth100WidthShimTop",
    "textLabel",
    "minWidth100ShimBottom",
    "_05SecondaryAltBlue",
    "smallSecondaryDefault",
    "minWidth100WidthShimTop2",
    "textLabel2",
    "minWidth100ShimBottom2",
    "textCta",
    "videoLink",
    "_01Blue",
    "_02Body0201Blue01Default",
    "playIcon",
    "play",
    "play2",
    "videoLink2",
    "body02",
    "duration",
    "body022",
    "quickbooksDashboardProductQboUsDesktop1",
    "_01Default2",
    "content2",
    "contentLeft2",
    "contentBlock2",
    "heading2",
    "eyebrow2",
    "headline2",
    "subhead2",
    "ctaBlockDesktop2",
    "ctaGroup2",
    "_01PrimaryGreen2",
    "smallPrimaryDefault2",
    "_05SecondaryAltBlue2",
    "smallSecondaryDefault2",
    "textCta2",
    "_01Blue2",
    "_02Body0201Blue01Default2",
    "playIcon2",
    "duration2",
    "quickbooksDashboardProductQboUsDesktop2",
    "mobile",
    "_01Default3",
    "content3",
    "contentLeft3",
    "contentBlock3",
    "heading3",
    "eyebrow3",
    "headline3",
    "subhead3",
    "ctaBlockMobile",
    "ctaGroup3",
    "_01PrimaryGreen3",
    "smallPrimaryDefault3",
    "_05SecondaryAltBlue3",
    "smallSecondaryDefault3",
    "_01Blue3",
    "_02Body0201Blue01Default3",
    "playIcon3",
    "duration3",
    "quickbooksDashboardProductQboUsDesktop3"
  ],
  _01Default: [
    "_01Default",
    "content",
    "contentLeft",
    "contentBlock",
    "heading",
    "eyebrow",
    "headline",
    "subhead",
    "ctaBlockDesktop",
    "ctaGroup",
    "_01PrimaryGreen",
    "smallPrimaryDefault",
    "minWidth100WidthShimTop",
    "textLabel",
    "minWidth100ShimBottom",
    "_05SecondaryAltBlue",
    "smallSecondaryDefault",
    "minWidth100WidthShimTop2",
    "textLabel2",
    "minWidth100ShimBottom2",
    "textCta",
    "videoLink",
    "_01Blue",
    "_02Body0201Blue01Default",
    "playIcon",
    "play",
    "play2",
    "videoLink2",
    "body02",
    "duration",
    "body022",
    "quickbooksDashboardProductQboUsDesktop1"
  ],
  content: [
    "content",
    "contentLeft",
    "contentBlock",
    "heading",
    "eyebrow",
    "headline",
    "subhead",
    "ctaBlockDesktop",
    "ctaGroup",
    "_01PrimaryGreen",
    "smallPrimaryDefault",
    "minWidth100WidthShimTop",
    "textLabel",
    "minWidth100ShimBottom",
    "_05SecondaryAltBlue",
    "smallSecondaryDefault",
    "minWidth100WidthShimTop2",
    "textLabel2",
    "minWidth100ShimBottom2",
    "textCta",
    "videoLink",
    "_01Blue",
    "_02Body0201Blue01Default",
    "playIcon",
    "play",
    "play2",
    "videoLink2",
    "body02",
    "duration",
    "body022",
    "quickbooksDashboardProductQboUsDesktop1"
  ],
  contentLeft: [
    "contentLeft",
    "contentBlock",
    "heading",
    "eyebrow",
    "headline",
    "subhead",
    "ctaBlockDesktop",
    "ctaGroup",
    "_01PrimaryGreen",
    "smallPrimaryDefault",
    "minWidth100WidthShimTop",
    "textLabel",
    "minWidth100ShimBottom",
    "_05SecondaryAltBlue",
    "smallSecondaryDefault",
    "minWidth100WidthShimTop2",
    "textLabel2",
    "minWidth100ShimBottom2",
    "textCta",
    "videoLink",
    "_01Blue",
    "_02Body0201Blue01Default",
    "playIcon",
    "play",
    "play2",
    "videoLink2",
    "body02",
    "duration",
    "body022"
  ],
  contentBlock: ["contentBlock", "heading", "eyebrow", "headline", "subhead"],
  heading: ["heading", "eyebrow", "headline"],
  eyebrow: ["eyebrow"],
  headline: ["headline"],
  subhead: ["subhead"],
  ctaBlockDesktop: [
    "ctaBlockDesktop",
    "ctaGroup",
    "_01PrimaryGreen",
    "smallPrimaryDefault",
    "minWidth100WidthShimTop",
    "textLabel",
    "minWidth100ShimBottom",
    "_05SecondaryAltBlue",
    "smallSecondaryDefault",
    "minWidth100WidthShimTop2",
    "textLabel2",
    "minWidth100ShimBottom2",
    "textCta",
    "videoLink",
    "_01Blue",
    "_02Body0201Blue01Default",
    "playIcon",
    "play",
    "play2",
    "videoLink2",
    "body02",
    "duration",
    "body022"
  ],
  ctaGroup: [
    "ctaGroup",
    "_01PrimaryGreen",
    "smallPrimaryDefault",
    "minWidth100WidthShimTop",
    "textLabel",
    "minWidth100ShimBottom",
    "_05SecondaryAltBlue",
    "smallSecondaryDefault",
    "minWidth100WidthShimTop2",
    "textLabel2",
    "minWidth100ShimBottom2",
    "textCta"
  ],
  _01PrimaryGreen: [
    "_01PrimaryGreen",
    "smallPrimaryDefault",
    "minWidth100WidthShimTop",
    "textLabel",
    "minWidth100ShimBottom"
  ],
  smallPrimaryDefault: [
    "smallPrimaryDefault",
    "minWidth100WidthShimTop",
    "textLabel",
    "minWidth100ShimBottom"
  ],
  minWidth100WidthShimTop: ["minWidth100WidthShimTop"],
  textLabel: ["textLabel"],
  minWidth100ShimBottom: ["minWidth100ShimBottom"],
  _05SecondaryAltBlue: [
    "_05SecondaryAltBlue",
    "smallSecondaryDefault",
    "minWidth100WidthShimTop2",
    "textLabel2",
    "minWidth100ShimBottom2"
  ],
  smallSecondaryDefault: [
    "smallSecondaryDefault",
    "minWidth100WidthShimTop2",
    "textLabel2",
    "minWidth100ShimBottom2"
  ],
  minWidth100WidthShimTop2: ["minWidth100WidthShimTop2"],
  textLabel2: ["textLabel2"],
  minWidth100ShimBottom2: ["minWidth100ShimBottom2"],
  textCta: ["textCta"],
  videoLink: [
    "videoLink",
    "_01Blue",
    "_02Body0201Blue01Default",
    "playIcon",
    "play",
    "play2",
    "videoLink2",
    "body02",
    "duration",
    "body022"
  ],
  _01Blue: [
    "_01Blue",
    "_02Body0201Blue01Default",
    "playIcon",
    "play",
    "play2",
    "videoLink2",
    "body02",
    "duration",
    "body022"
  ],
  _02Body0201Blue01Default: [
    "_02Body0201Blue01Default",
    "playIcon",
    "play",
    "play2",
    "videoLink2",
    "body02",
    "duration",
    "body022"
  ],
  playIcon: ["playIcon", "play", "play2"],
  play: ["play", "play2"],
  play2: ["play2"],
  videoLink2: ["videoLink2", "body02"],
  body02: ["body02"],
  duration: ["duration", "body022"],
  body022: ["body022"],
  quickbooksDashboardProductQboUsDesktop1: [
    "quickbooksDashboardProductQboUsDesktop1"
  ],
  _01Default2: [
    "_01Default2",
    "content2",
    "contentLeft2",
    "contentBlock2",
    "heading2",
    "eyebrow2",
    "headline2",
    "subhead2",
    "ctaBlockDesktop2",
    "ctaGroup2",
    "_01PrimaryGreen2",
    "smallPrimaryDefault2",
    "_05SecondaryAltBlue2",
    "smallSecondaryDefault2",
    "textCta2",
    "_01Blue2",
    "_02Body0201Blue01Default2",
    "playIcon2",
    "duration2",
    "quickbooksDashboardProductQboUsDesktop2"
  ],
  content2: [
    "content2",
    "contentLeft2",
    "contentBlock2",
    "heading2",
    "eyebrow2",
    "headline2",
    "subhead2",
    "ctaBlockDesktop2",
    "ctaGroup2",
    "_01PrimaryGreen2",
    "smallPrimaryDefault2",
    "_05SecondaryAltBlue2",
    "smallSecondaryDefault2",
    "textCta2",
    "_01Blue2",
    "_02Body0201Blue01Default2",
    "playIcon2",
    "duration2",
    "quickbooksDashboardProductQboUsDesktop2"
  ],
  contentLeft2: [
    "contentLeft2",
    "contentBlock2",
    "heading2",
    "eyebrow2",
    "headline2",
    "subhead2",
    "ctaBlockDesktop2",
    "ctaGroup2",
    "_01PrimaryGreen2",
    "smallPrimaryDefault2",
    "_05SecondaryAltBlue2",
    "smallSecondaryDefault2",
    "textCta2",
    "_01Blue2",
    "_02Body0201Blue01Default2",
    "playIcon2",
    "duration2"
  ],
  contentBlock2: [
    "contentBlock2",
    "heading2",
    "eyebrow2",
    "headline2",
    "subhead2"
  ],
  heading2: ["heading2", "eyebrow2", "headline2"],
  eyebrow2: ["eyebrow2"],
  headline2: ["headline2"],
  subhead2: ["subhead2"],
  ctaBlockDesktop2: [
    "ctaBlockDesktop2",
    "ctaGroup2",
    "_01PrimaryGreen2",
    "smallPrimaryDefault2",
    "_05SecondaryAltBlue2",
    "smallSecondaryDefault2",
    "textCta2",
    "_01Blue2",
    "_02Body0201Blue01Default2",
    "playIcon2",
    "duration2"
  ],
  ctaGroup2: [
    "ctaGroup2",
    "_01PrimaryGreen2",
    "smallPrimaryDefault2",
    "_05SecondaryAltBlue2",
    "smallSecondaryDefault2",
    "textCta2"
  ],
  _01PrimaryGreen2: ["_01PrimaryGreen2", "smallPrimaryDefault2"],
  smallPrimaryDefault2: ["smallPrimaryDefault2"],
  _05SecondaryAltBlue2: ["_05SecondaryAltBlue2", "smallSecondaryDefault2"],
  smallSecondaryDefault2: ["smallSecondaryDefault2"],
  textCta2: ["textCta2"],
  _01Blue2: ["_01Blue2", "_02Body0201Blue01Default2", "playIcon2", "duration2"],
  _02Body0201Blue01Default2: [
    "_02Body0201Blue01Default2",
    "playIcon2",
    "duration2"
  ],
  playIcon2: ["playIcon2"],
  duration2: ["duration2"],
  quickbooksDashboardProductQboUsDesktop2: [
    "quickbooksDashboardProductQboUsDesktop2"
  ],
  mobile: [
    "mobile",
    "_01Default3",
    "content3",
    "contentLeft3",
    "contentBlock3",
    "heading3",
    "eyebrow3",
    "headline3",
    "subhead3",
    "ctaBlockMobile",
    "ctaGroup3",
    "_01PrimaryGreen3",
    "smallPrimaryDefault3",
    "_05SecondaryAltBlue3",
    "smallSecondaryDefault3",
    "_01Blue3",
    "_02Body0201Blue01Default3",
    "playIcon3",
    "duration3",
    "quickbooksDashboardProductQboUsDesktop3"
  ],
  _01Default3: [
    "_01Default3",
    "content3",
    "contentLeft3",
    "contentBlock3",
    "heading3",
    "eyebrow3",
    "headline3",
    "subhead3",
    "ctaBlockMobile",
    "ctaGroup3",
    "_01PrimaryGreen3",
    "smallPrimaryDefault3",
    "_05SecondaryAltBlue3",
    "smallSecondaryDefault3",
    "_01Blue3",
    "_02Body0201Blue01Default3",
    "playIcon3",
    "duration3",
    "quickbooksDashboardProductQboUsDesktop3"
  ],
  content3: [
    "content3",
    "contentLeft3",
    "contentBlock3",
    "heading3",
    "eyebrow3",
    "headline3",
    "subhead3",
    "ctaBlockMobile",
    "ctaGroup3",
    "_01PrimaryGreen3",
    "smallPrimaryDefault3",
    "_05SecondaryAltBlue3",
    "smallSecondaryDefault3",
    "_01Blue3",
    "_02Body0201Blue01Default3",
    "playIcon3",
    "duration3",
    "quickbooksDashboardProductQboUsDesktop3"
  ],
  contentLeft3: [
    "contentLeft3",
    "contentBlock3",
    "heading3",
    "eyebrow3",
    "headline3",
    "subhead3",
    "ctaBlockMobile",
    "ctaGroup3",
    "_01PrimaryGreen3",
    "smallPrimaryDefault3",
    "_05SecondaryAltBlue3",
    "smallSecondaryDefault3",
    "_01Blue3",
    "_02Body0201Blue01Default3",
    "playIcon3",
    "duration3"
  ],
  contentBlock3: [
    "contentBlock3",
    "heading3",
    "eyebrow3",
    "headline3",
    "subhead3"
  ],
  heading3: ["heading3", "eyebrow3", "headline3"],
  eyebrow3: ["eyebrow3"],
  headline3: ["headline3"],
  subhead3: ["subhead3"],
  ctaBlockMobile: [
    "ctaBlockMobile",
    "ctaGroup3",
    "_01PrimaryGreen3",
    "smallPrimaryDefault3",
    "_05SecondaryAltBlue3",
    "smallSecondaryDefault3",
    "_01Blue3",
    "_02Body0201Blue01Default3",
    "playIcon3",
    "duration3"
  ],
  ctaGroup3: [
    "ctaGroup3",
    "_01PrimaryGreen3",
    "smallPrimaryDefault3",
    "_05SecondaryAltBlue3",
    "smallSecondaryDefault3"
  ],
  _01PrimaryGreen3: ["_01PrimaryGreen3", "smallPrimaryDefault3"],
  smallPrimaryDefault3: ["smallPrimaryDefault3"],
  _05SecondaryAltBlue3: ["_05SecondaryAltBlue3", "smallSecondaryDefault3"],
  smallSecondaryDefault3: ["smallSecondaryDefault3"],
  _01Blue3: ["_01Blue3", "_02Body0201Blue01Default3", "playIcon3", "duration3"],
  _02Body0201Blue01Default3: [
    "_02Body0201Blue01Default3",
    "playIcon3",
    "duration3"
  ],
  playIcon3: ["playIcon3"],
  duration3: ["duration3"],
  quickbooksDashboardProductQboUsDesktop3: [
    "quickbooksDashboardProductQboUsDesktop3"
  ]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  _01Default: "div";
  content: "div";
  contentLeft: "div";
  contentBlock: "div";
  heading: "div";
  eyebrow: "div";
  headline: "div";
  subhead: "div";
  ctaBlockDesktop: "div";
  ctaGroup: "div";
  _01PrimaryGreen: "div";
  smallPrimaryDefault: "div";
  minWidth100WidthShimTop: "div";
  textLabel: "div";
  minWidth100ShimBottom: "div";
  _05SecondaryAltBlue: "div";
  smallSecondaryDefault: "div";
  minWidth100WidthShimTop2: "div";
  textLabel2: "div";
  minWidth100ShimBottom2: "div";
  textCta: "div";
  videoLink: "div";
  _01Blue: "div";
  _02Body0201Blue01Default: "div";
  playIcon: "div";
  play: "div";
  play2: "div";
  videoLink2: "div";
  body02: "div";
  duration: "div";
  body022: "div";
  quickbooksDashboardProductQboUsDesktop1: "div";
  _01Default2: "div";
  content2: "div";
  contentLeft2: "div";
  contentBlock2: "div";
  heading2: "div";
  eyebrow2: "div";
  headline2: "div";
  subhead2: "div";
  ctaBlockDesktop2: "div";
  ctaGroup2: "div";
  _01PrimaryGreen2: "div";
  smallPrimaryDefault2: "div";
  _05SecondaryAltBlue2: "div";
  smallSecondaryDefault2: "div";
  textCta2: "div";
  _01Blue2: "div";
  _02Body0201Blue01Default2: "div";
  playIcon2: "div";
  duration2: "div";
  quickbooksDashboardProductQboUsDesktop2: "div";
  mobile: "div";
  _01Default3: "div";
  content3: "div";
  contentLeft3: "div";
  contentBlock3: "div";
  heading3: "div";
  eyebrow3: "div";
  headline3: "div";
  subhead3: "div";
  ctaBlockMobile: "div";
  ctaGroup3: "div";
  _01PrimaryGreen3: "div";
  smallPrimaryDefault3: "div";
  _05SecondaryAltBlue3: "div";
  smallSecondaryDefault3: "div";
  _01Blue3: "div";
  _02Body0201Blue01Default3: "div";
  playIcon3: "div";
  duration3: "div";
  quickbooksDashboardProductQboUsDesktop3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNewPage4__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNewPage4__VariantsArgs;
    args?: PlasmicNewPage4__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicNewPage4__Fetches;
  } & Omit<PlasmicNewPage4__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicNewPage4__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicNewPage4__ArgProps,
      internalVariantPropNames: PlasmicNewPage4__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicNewPage4__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNewPage4";
  } else {
    func.displayName = `PlasmicNewPage4.${nodeName}`;
  }
  return func;
}

export const PlasmicNewPage4 = Object.assign(
  // Top-level PlasmicNewPage4 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    _01Default: makeNodeComponent("_01Default"),
    content: makeNodeComponent("content"),
    contentLeft: makeNodeComponent("contentLeft"),
    contentBlock: makeNodeComponent("contentBlock"),
    heading: makeNodeComponent("heading"),
    eyebrow: makeNodeComponent("eyebrow"),
    headline: makeNodeComponent("headline"),
    subhead: makeNodeComponent("subhead"),
    ctaBlockDesktop: makeNodeComponent("ctaBlockDesktop"),
    ctaGroup: makeNodeComponent("ctaGroup"),
    _01PrimaryGreen: makeNodeComponent("_01PrimaryGreen"),
    smallPrimaryDefault: makeNodeComponent("smallPrimaryDefault"),
    minWidth100WidthShimTop: makeNodeComponent("minWidth100WidthShimTop"),
    textLabel: makeNodeComponent("textLabel"),
    minWidth100ShimBottom: makeNodeComponent("minWidth100ShimBottom"),
    _05SecondaryAltBlue: makeNodeComponent("_05SecondaryAltBlue"),
    smallSecondaryDefault: makeNodeComponent("smallSecondaryDefault"),
    minWidth100WidthShimTop2: makeNodeComponent("minWidth100WidthShimTop2"),
    textLabel2: makeNodeComponent("textLabel2"),
    minWidth100ShimBottom2: makeNodeComponent("minWidth100ShimBottom2"),
    textCta: makeNodeComponent("textCta"),
    videoLink: makeNodeComponent("videoLink"),
    _01Blue: makeNodeComponent("_01Blue"),
    _02Body0201Blue01Default: makeNodeComponent("_02Body0201Blue01Default"),
    playIcon: makeNodeComponent("playIcon"),
    play: makeNodeComponent("play"),
    play2: makeNodeComponent("play2"),
    videoLink2: makeNodeComponent("videoLink2"),
    body02: makeNodeComponent("body02"),
    duration: makeNodeComponent("duration"),
    body022: makeNodeComponent("body022"),
    quickbooksDashboardProductQboUsDesktop1: makeNodeComponent(
      "quickbooksDashboardProductQboUsDesktop1"
    ),
    _01Default2: makeNodeComponent("_01Default2"),
    content2: makeNodeComponent("content2"),
    contentLeft2: makeNodeComponent("contentLeft2"),
    contentBlock2: makeNodeComponent("contentBlock2"),
    heading2: makeNodeComponent("heading2"),
    eyebrow2: makeNodeComponent("eyebrow2"),
    headline2: makeNodeComponent("headline2"),
    subhead2: makeNodeComponent("subhead2"),
    ctaBlockDesktop2: makeNodeComponent("ctaBlockDesktop2"),
    ctaGroup2: makeNodeComponent("ctaGroup2"),
    _01PrimaryGreen2: makeNodeComponent("_01PrimaryGreen2"),
    smallPrimaryDefault2: makeNodeComponent("smallPrimaryDefault2"),
    _05SecondaryAltBlue2: makeNodeComponent("_05SecondaryAltBlue2"),
    smallSecondaryDefault2: makeNodeComponent("smallSecondaryDefault2"),
    textCta2: makeNodeComponent("textCta2"),
    _01Blue2: makeNodeComponent("_01Blue2"),
    _02Body0201Blue01Default2: makeNodeComponent("_02Body0201Blue01Default2"),
    playIcon2: makeNodeComponent("playIcon2"),
    duration2: makeNodeComponent("duration2"),
    quickbooksDashboardProductQboUsDesktop2: makeNodeComponent(
      "quickbooksDashboardProductQboUsDesktop2"
    ),
    mobile: makeNodeComponent("mobile"),
    _01Default3: makeNodeComponent("_01Default3"),
    content3: makeNodeComponent("content3"),
    contentLeft3: makeNodeComponent("contentLeft3"),
    contentBlock3: makeNodeComponent("contentBlock3"),
    heading3: makeNodeComponent("heading3"),
    eyebrow3: makeNodeComponent("eyebrow3"),
    headline3: makeNodeComponent("headline3"),
    subhead3: makeNodeComponent("subhead3"),
    ctaBlockMobile: makeNodeComponent("ctaBlockMobile"),
    ctaGroup3: makeNodeComponent("ctaGroup3"),
    _01PrimaryGreen3: makeNodeComponent("_01PrimaryGreen3"),
    smallPrimaryDefault3: makeNodeComponent("smallPrimaryDefault3"),
    _05SecondaryAltBlue3: makeNodeComponent("_05SecondaryAltBlue3"),
    smallSecondaryDefault3: makeNodeComponent("smallSecondaryDefault3"),
    _01Blue3: makeNodeComponent("_01Blue3"),
    _02Body0201Blue01Default3: makeNodeComponent("_02Body0201Blue01Default3"),
    playIcon3: makeNodeComponent("playIcon3"),
    duration3: makeNodeComponent("duration3"),
    quickbooksDashboardProductQboUsDesktop3: makeNodeComponent(
      "quickbooksDashboardProductQboUsDesktop3"
    ),

    // Metadata about props expected for PlasmicNewPage4
    internalVariantProps: PlasmicNewPage4__VariantProps,
    internalArgProps: PlasmicNewPage4__ArgProps
  }
);

export default PlasmicNewPage4;
/* prettier-ignore-end */
