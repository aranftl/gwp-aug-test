// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: x8ztdr6NwjtFcF6gdhDwfr
// Component: fWs9zOC_5L
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import RwButton from "../../RwButton"; // plasmic-import: ZtlGG_EjHW/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_new_figma_test.module.css"; // plasmic-import: x8ztdr6NwjtFcF6gdhDwfr/projectcss
import * as sty from "./PlasmicNewPage3.module.css"; // plasmic-import: fWs9zOC_5L/css

import Ellipse117Icon from "./icons/PlasmicIcon__Ellipse117"; // plasmic-import: ugPo591Rp5U7/icon
import Polygon2Icon from "./icons/PlasmicIcon__Polygon2"; // plasmic-import: CNaAEN6dTgKX/icon
import Mask76Icon from "./icons/PlasmicIcon__Mask76"; // plasmic-import: n4hkezQ3PM5/icon
import Vector93Icon from "./icons/PlasmicIcon__Vector93"; // plasmic-import: QZs2-VxDSGI/icon
import Rectangle613Icon from "./icons/PlasmicIcon__Rectangle613"; // plasmic-import: 86YEVfU2s76/icon

export type PlasmicNewPage3__VariantMembers = {};

export type PlasmicNewPage3__VariantsArgs = {};
type VariantPropType = keyof PlasmicNewPage3__VariantsArgs;
export const PlasmicNewPage3__VariantProps = new Array<VariantPropType>();

export type PlasmicNewPage3__ArgsType = {};
type ArgPropType = keyof PlasmicNewPage3__ArgsType;
export const PlasmicNewPage3__ArgProps = new Array<ArgPropType>();

export type PlasmicNewPage3__OverridesType = {
  root?: p.Flex<"div">;
  option2?: p.Flex<"div">;
  dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage?: p.Flex<"div">;
  rectangle598?: p.Flex<"div">;
  maskGroup?: p.Flex<"div">;
  qbLiveBookkeeperJonPace1?: p.Flex<"div">;
  heroHeader?: p.Flex<"div">;
  frame265?: p.Flex<"div">;
  headerAndSubhead?: p.Flex<"div">;
  group3776?: p.Flex<"div">;
  rwButton?: p.Flex<typeof RwButton>;
  optionalHeroFootnote?: p.Flex<"div">;
  playLink?: p.Flex<"div">;
  bkChat?: p.Flex<"div">;
  card?: p.Flex<"div">;
  hiBenLooksLike?: p.Flex<"div">;
  bookkeeperPhoto?: p.Flex<"div">;
  quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63?: p.Flex<"div">;
  secondaryNav?: p.Flex<"div">;
  leftButtons?: p.Flex<"div">;
  button?: p.Flex<"div">;
  frame5?: p.Flex<"div">;
  minWidth120WidthShimTop3?: p.Flex<"div">;
  lorenIpsum3?: p.Flex<"div">;
  minWidth120ShimBottom3?: p.Flex<"div">;
  rectangle390?: p.Flex<"div">;
  smbChat?: p.Flex<"div">;
  card2?: p.Flex<"div">;
  hiBenLooksLike2?: p.Flex<"div">;
  smbPhoto?: p.Flex<"div">;
  screenShot20210304At5241?: p.Flex<"div">;
};

export interface DefaultNewPage3Props {
  dataFetches: PlasmicNewPage3__Fetches;
}

function PlasmicNewPage3__RenderFunc(props: {
  variants: PlasmicNewPage3__VariantsArgs;
  args: PlasmicNewPage3__ArgsType;
  overrides: PlasmicNewPage3__OverridesType;
  dataFetches?: PlasmicNewPage3__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"option2"}
            data-plasmic-override={overrides.option2}
            className={classNames(defaultcss.all, sty.option2)}
          >
            <div
              data-plasmic-name={
                "dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage"
              }
              data-plasmic-override={
                overrides.dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage
              }
              className={classNames(
                defaultcss.all,
                sty.dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage
              )}
            >
              <div
                data-plasmic-name={"rectangle598"}
                data-plasmic-override={overrides.rectangle598}
                className={classNames(defaultcss.all, sty.rectangle598)}
              />

              <div
                data-plasmic-name={"maskGroup"}
                data-plasmic-override={overrides.maskGroup}
                className={classNames(defaultcss.all, sty.maskGroup)}
              >
                <div
                  data-plasmic-name={"qbLiveBookkeeperJonPace1"}
                  data-plasmic-override={overrides.qbLiveBookkeeperJonPace1}
                  className={classNames(
                    defaultcss.all,
                    sty.qbLiveBookkeeperJonPace1
                  )}
                />
              </div>

              <div
                data-plasmic-name={"heroHeader"}
                data-plasmic-override={overrides.heroHeader}
                className={classNames(defaultcss.all, sty.heroHeader)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame265"}
                  data-plasmic-override={overrides.frame265}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.frame265)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"headerAndSubhead"}
                    data-plasmic-override={overrides.headerAndSubhead}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.headerAndSubhead)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__sBvS
                      )}
                    >
                      {"Accurate books you \ncan count on"}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__fS98B
                      )}
                    >
                      {
                        "Partner with an expert who knows your business. They’ll manage and maintain your books with guaranteed accuracy."
                      }
                    </div>
                  </p.Stack>

                  <div
                    data-plasmic-name={"group3776"}
                    data-plasmic-override={overrides.group3776}
                    className={classNames(defaultcss.all, sty.group3776)}
                  >
                    <RwButton
                      data-plasmic-name={"rwButton"}
                      data-plasmic-override={overrides.rwButton}
                      className={classNames("__wab_instance", sty.rwButton)}
                    />

                    <div
                      data-plasmic-name={"optionalHeroFootnote"}
                      data-plasmic-override={overrides.optionalHeroFootnote}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.optionalHeroFootnote
                      )}
                    >
                      {"Call 800-365-9606"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"playLink"}
                    data-plasmic-override={overrides.playLink}
                    className={classNames(defaultcss.all, sty.playLink)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.text__mnSsb
                      )}
                    >
                      {"See Live Bookkeeping in action (1:34)"}
                    </div>

                    <Ellipse117Icon
                      className={classNames(defaultcss.all, sty.svg__yPsvH)}
                      role={"img"}
                    />

                    <Polygon2Icon
                      className={classNames(defaultcss.all, sty.svg__oo7Z5)}
                      role={"img"}
                    />
                  </div>
                </p.Stack>
              </div>

              <div
                data-plasmic-name={"bkChat"}
                data-plasmic-override={overrides.bkChat}
                className={classNames(defaultcss.all, sty.bkChat)}
              >
                <div
                  data-plasmic-name={"card"}
                  data-plasmic-override={overrides.card}
                  className={classNames(defaultcss.all, sty.card)}
                />

                <div
                  data-plasmic-name={"hiBenLooksLike"}
                  data-plasmic-override={overrides.hiBenLooksLike}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.hiBenLooksLike
                  )}
                >
                  {"Your accounts are reconciled and you’re set for the month."}
                </div>

                <div
                  data-plasmic-name={"bookkeeperPhoto"}
                  data-plasmic-override={overrides.bookkeeperPhoto}
                  className={classNames(defaultcss.all, sty.bookkeeperPhoto)}
                >
                  <Mask76Icon
                    className={classNames(defaultcss.all, sty.svg__qEqMz)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={
                      "quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63"
                    }
                    data-plasmic-override={
                      overrides.quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63
                    }
                    className={classNames(
                      defaultcss.all,
                      sty.quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63
                    )}
                  />
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"secondaryNav"}
              data-plasmic-override={overrides.secondaryNav}
              className={classNames(defaultcss.all, sty.secondaryNav)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"leftButtons"}
                data-plasmic-override={overrides.leftButtons}
                hasGap={true}
                className={classNames(defaultcss.all, sty.leftButtons)}
              >
                <div
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames(defaultcss.all, sty.button)}
                >
                  <div
                    data-plasmic-name={"frame5"}
                    data-plasmic-override={overrides.frame5}
                    className={classNames(defaultcss.all, sty.frame5)}
                  >
                    <div
                      data-plasmic-name={"minWidth120WidthShimTop3"}
                      data-plasmic-override={overrides.minWidth120WidthShimTop3}
                      className={classNames(
                        defaultcss.all,
                        sty.minWidth120WidthShimTop3
                      )}
                    />

                    <div
                      data-plasmic-name={"lorenIpsum3"}
                      data-plasmic-override={overrides.lorenIpsum3}
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.lorenIpsum3
                      )}
                    >
                      {"Get a free consultation"}
                    </div>

                    <div
                      data-plasmic-name={"minWidth120ShimBottom3"}
                      data-plasmic-override={overrides.minWidth120ShimBottom3}
                      className={classNames(
                        defaultcss.all,
                        sty.minWidth120ShimBottom3
                      )}
                    />
                  </div>
                </div>
              </p.Stack>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__oEc5O
                )}
              >
                {"QuickBooks Live"}
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__wx7OC
                )}
              >
                {"Pricing & More"}
              </div>

              <Vector93Icon
                className={classNames(defaultcss.all, sty.svg__qr2Im)}
                role={"img"}
              />

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__kDer3
                )}
              >
                {"Overview"}
              </div>

              {false ? (
                <div
                  data-plasmic-name={"rectangle390"}
                  data-plasmic-override={overrides.rectangle390}
                  className={classNames(defaultcss.all, sty.rectangle390)}
                />
              ) : null}
            </div>

            <div
              data-plasmic-name={"smbChat"}
              data-plasmic-override={overrides.smbChat}
              className={classNames(defaultcss.all, sty.smbChat)}
            >
              <div
                data-plasmic-name={"card2"}
                data-plasmic-override={overrides.card2}
                className={classNames(defaultcss.all, sty.card2)}
              />

              <div
                data-plasmic-name={"hiBenLooksLike2"}
                data-plasmic-override={overrides.hiBenLooksLike2}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.hiBenLooksLike2
                )}
              >
                {
                  "Thanks! I’ll check on the payment \nyou flagged that hasn’t cleared. "
                }
              </div>

              <div
                data-plasmic-name={"smbPhoto"}
                data-plasmic-override={overrides.smbPhoto}
                className={classNames(defaultcss.all, sty.smbPhoto)}
              >
                <Mask76Icon
                  className={classNames(defaultcss.all, sty.svg__bhWhc)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"screenShot20210304At5241"}
                  data-plasmic-override={overrides.screenShot20210304At5241}
                  className={classNames(
                    defaultcss.all,
                    sty.screenShot20210304At5241
                  )}
                />
              </div>
            </div>

            <Rectangle613Icon
              className={classNames(defaultcss.all, sty.svg__p2Z8U)}
              role={"img"}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "option2",
    "dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage",
    "rectangle598",
    "maskGroup",
    "qbLiveBookkeeperJonPace1",
    "heroHeader",
    "frame265",
    "headerAndSubhead",
    "group3776",
    "rwButton",
    "optionalHeroFootnote",
    "playLink",
    "bkChat",
    "card",
    "hiBenLooksLike",
    "bookkeeperPhoto",
    "quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63",
    "secondaryNav",
    "leftButtons",
    "button",
    "frame5",
    "minWidth120WidthShimTop3",
    "lorenIpsum3",
    "minWidth120ShimBottom3",
    "rectangle390",
    "smbChat",
    "card2",
    "hiBenLooksLike2",
    "smbPhoto",
    "screenShot20210304At5241"
  ],
  option2: [
    "option2",
    "dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage",
    "rectangle598",
    "maskGroup",
    "qbLiveBookkeeperJonPace1",
    "heroHeader",
    "frame265",
    "headerAndSubhead",
    "group3776",
    "rwButton",
    "optionalHeroFootnote",
    "playLink",
    "bkChat",
    "card",
    "hiBenLooksLike",
    "bookkeeperPhoto",
    "quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63",
    "secondaryNav",
    "leftButtons",
    "button",
    "frame5",
    "minWidth120WidthShimTop3",
    "lorenIpsum3",
    "minWidth120ShimBottom3",
    "rectangle390",
    "smbChat",
    "card2",
    "hiBenLooksLike2",
    "smbPhoto",
    "screenShot20210304At5241"
  ],
  dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage: [
    "dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage",
    "rectangle598",
    "maskGroup",
    "qbLiveBookkeeperJonPace1",
    "heroHeader",
    "frame265",
    "headerAndSubhead",
    "group3776",
    "rwButton",
    "optionalHeroFootnote",
    "playLink",
    "bkChat",
    "card",
    "hiBenLooksLike",
    "bookkeeperPhoto",
    "quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63"
  ],
  rectangle598: ["rectangle598"],
  maskGroup: ["maskGroup", "qbLiveBookkeeperJonPace1"],
  qbLiveBookkeeperJonPace1: ["qbLiveBookkeeperJonPace1"],
  heroHeader: [
    "heroHeader",
    "frame265",
    "headerAndSubhead",
    "group3776",
    "rwButton",
    "optionalHeroFootnote",
    "playLink"
  ],
  frame265: [
    "frame265",
    "headerAndSubhead",
    "group3776",
    "rwButton",
    "optionalHeroFootnote",
    "playLink"
  ],
  headerAndSubhead: ["headerAndSubhead"],
  group3776: ["group3776", "rwButton", "optionalHeroFootnote"],
  rwButton: ["rwButton"],
  optionalHeroFootnote: ["optionalHeroFootnote"],
  playLink: ["playLink"],
  bkChat: [
    "bkChat",
    "card",
    "hiBenLooksLike",
    "bookkeeperPhoto",
    "quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63"
  ],
  card: ["card"],
  hiBenLooksLike: ["hiBenLooksLike"],
  bookkeeperPhoto: [
    "bookkeeperPhoto",
    "quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63"
  ],
  quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63: [
    "quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63"
  ],
  secondaryNav: [
    "secondaryNav",
    "leftButtons",
    "button",
    "frame5",
    "minWidth120WidthShimTop3",
    "lorenIpsum3",
    "minWidth120ShimBottom3",
    "rectangle390"
  ],
  leftButtons: [
    "leftButtons",
    "button",
    "frame5",
    "minWidth120WidthShimTop3",
    "lorenIpsum3",
    "minWidth120ShimBottom3"
  ],
  button: [
    "button",
    "frame5",
    "minWidth120WidthShimTop3",
    "lorenIpsum3",
    "minWidth120ShimBottom3"
  ],
  frame5: [
    "frame5",
    "minWidth120WidthShimTop3",
    "lorenIpsum3",
    "minWidth120ShimBottom3"
  ],
  minWidth120WidthShimTop3: ["minWidth120WidthShimTop3"],
  lorenIpsum3: ["lorenIpsum3"],
  minWidth120ShimBottom3: ["minWidth120ShimBottom3"],
  rectangle390: ["rectangle390"],
  smbChat: [
    "smbChat",
    "card2",
    "hiBenLooksLike2",
    "smbPhoto",
    "screenShot20210304At5241"
  ],
  card2: ["card2"],
  hiBenLooksLike2: ["hiBenLooksLike2"],
  smbPhoto: ["smbPhoto", "screenShot20210304At5241"],
  screenShot20210304At5241: ["screenShot20210304At5241"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  option2: "div";
  dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage: "div";
  rectangle598: "div";
  maskGroup: "div";
  qbLiveBookkeeperJonPace1: "div";
  heroHeader: "div";
  frame265: "div";
  headerAndSubhead: "div";
  group3776: "div";
  rwButton: typeof RwButton;
  optionalHeroFootnote: "div";
  playLink: "div";
  bkChat: "div";
  card: "div";
  hiBenLooksLike: "div";
  bookkeeperPhoto: "div";
  quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63: "div";
  secondaryNav: "div";
  leftButtons: "div";
  button: "div";
  frame5: "div";
  minWidth120WidthShimTop3: "div";
  lorenIpsum3: "div";
  minWidth120ShimBottom3: "div";
  rectangle390: "div";
  smbChat: "div";
  card2: "div";
  hiBenLooksLike2: "div";
  smbPhoto: "div";
  screenShot20210304At5241: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNewPage3__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNewPage3__VariantsArgs;
    args?: PlasmicNewPage3__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicNewPage3__Fetches;
  } & Omit<PlasmicNewPage3__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicNewPage3__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicNewPage3__ArgProps,
      internalVariantPropNames: PlasmicNewPage3__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicNewPage3__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNewPage3";
  } else {
    func.displayName = `PlasmicNewPage3.${nodeName}`;
  }
  return func;
}

export const PlasmicNewPage3 = Object.assign(
  // Top-level PlasmicNewPage3 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    option2: makeNodeComponent("option2"),
    dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage:
      makeNodeComponent(
        "dHeroHeaderSubheadPrimaryButtonCtaSecondaryButtonCtaAndImage"
      ),
    rectangle598: makeNodeComponent("rectangle598"),
    maskGroup: makeNodeComponent("maskGroup"),
    qbLiveBookkeeperJonPace1: makeNodeComponent("qbLiveBookkeeperJonPace1"),
    heroHeader: makeNodeComponent("heroHeader"),
    frame265: makeNodeComponent("frame265"),
    headerAndSubhead: makeNodeComponent("headerAndSubhead"),
    group3776: makeNodeComponent("group3776"),
    rwButton: makeNodeComponent("rwButton"),
    optionalHeroFootnote: makeNodeComponent("optionalHeroFootnote"),
    playLink: makeNodeComponent("playLink"),
    bkChat: makeNodeComponent("bkChat"),
    card: makeNodeComponent("card"),
    hiBenLooksLike: makeNodeComponent("hiBenLooksLike"),
    bookkeeperPhoto: makeNodeComponent("bookkeeperPhoto"),
    quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63: makeNodeComponent(
      "quickBooks1905300656BoiseAdamJohnGroupSeamlessTbR63"
    ),
    secondaryNav: makeNodeComponent("secondaryNav"),
    leftButtons: makeNodeComponent("leftButtons"),
    button: makeNodeComponent("button"),
    frame5: makeNodeComponent("frame5"),
    minWidth120WidthShimTop3: makeNodeComponent("minWidth120WidthShimTop3"),
    lorenIpsum3: makeNodeComponent("lorenIpsum3"),
    minWidth120ShimBottom3: makeNodeComponent("minWidth120ShimBottom3"),
    rectangle390: makeNodeComponent("rectangle390"),
    smbChat: makeNodeComponent("smbChat"),
    card2: makeNodeComponent("card2"),
    hiBenLooksLike2: makeNodeComponent("hiBenLooksLike2"),
    smbPhoto: makeNodeComponent("smbPhoto"),
    screenShot20210304At5241: makeNodeComponent("screenShot20210304At5241"),

    // Metadata about props expected for PlasmicNewPage3
    internalVariantProps: PlasmicNewPage3__VariantProps,
    internalArgProps: PlasmicNewPage3__ArgProps
  }
);

export default PlasmicNewPage3;
/* prettier-ignore-end */
